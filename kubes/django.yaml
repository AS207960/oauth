
kind: ConfigMap
apiVersion: v1
metadata:
  name: oauth-django-conf
data:
  HOST: "oauth.as207960.net,oauth-nginx"
  DJANGO_SETTINGS_MODULE: as207960_oauth.settings
  EXTERNAL_URL: "https://oauth.as207960.net"
  SENTRY_ENVIRONMENT: "prod"
  KEYCLOAK_SERVER_URL: "https://sso.as207960.net/"
  KEYCLOAK_REALM: master
  KEYCLOAK_SCOPES: "openid email profile"
  KEYCLOAK_CLIENT_ID: "oauth-management"
  DB_HOST: "cockroachdb"
  DB_NAME: "oauth"
  PAT_PRIV_LOCATION: "/pat-key/privkey.pem"
  S3_ENDPOINT: "https://s3.as207960.net"
  S3_REGION: "garage"
  S3_BUCKET: "oauth-django"
  S3_ACCESS_KEY_ID: "GK34eedff799d017779c446557"
  S3_CUSTOM_DOMAIN: "oauth-django.content.as207960.net"
  STATIC_URL: "https://oauth-django.content.as207960.net/"
  MEDIA_URL: "https://oauth-django.content.as207960.net/"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oauth-django
  labels:
    app: oauth-management
    part: django
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oauth-management
      part: django
  template:
    metadata:
      annotations:
        cni.projectcalico.org/ipv6pools: "[\"default-ipv6-ippool\"]"
      labels:
        app: oauth-management
        part: django
    spec:
      volumes:
        - name: privkey
          secret:
            secretName: oauth-pat-priv
      initContainers:
        - name: django
          image: as207960/oauth-management:(version)
          imagePullPolicy: Always
          command: ["sh", "-c", "python3 manage.py collectstatic --noinput && python3 manage.py migrate && python3 manage.py sync-keycloak"]
          volumeMounts:
            - mountPath: "/pat-key/"
              name: privkey
          envFrom:
            - configMapRef:
                name: oauth-django-conf
            - secretRef:
                name: oauth-db-creds
              prefix: "DB_"
            - secretRef:
                name: oauth-django-secret
            - secretRef:
                name: oauth-keycloak
              prefix: "KEYCLOAK_"
            - secretRef:
                name: oauth-s3
      containers:
        - name: gunicorn
          image: as207960/oauth-management:(version)
          imagePullPolicy: Always
          command: ["gunicorn", "-w", "8", "-b", "[::]:8000", "--forwarded-allow-ips", "*", "--access-logfile", "-", "--log-level=debug", "--timeout=90", "as207960_oauth.wsgi:application"]
          ports:
            - containerPort: 8000
          volumeMounts:
            - mountPath: "/pat-key/"
              name: privkey
          envFrom:
            - configMapRef:
                name: oauth-django-conf
            - secretRef:
                name: oauth-db-creds
              prefix: "DB_"
            - secretRef:
                name: oauth-django-secret
            - secretRef:
                name: oauth-keycloak
              prefix: "KEYCLOAK_"
            - secretRef:
                name: oauth-s3
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: oauth-django
spec:
  podSelector:
    matchLabels:
      app: oauth-management
      part: django
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: oauth-management
          part: nginx
    ports:
    - protocol: TCP
      port: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: oauth-django
  labels:
    app: oauth-management
    part: django
spec:
  selector:
    app: oauth-management
    part: django
  ports:
    - port: 8000
      targetPort: 8000
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: oauth-django
spec:
  podSelector:
    matchLabels:
      app: oauth
      part: django
  policyTypes:
    - Ingress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              app.kubernetes.io/name: ingress-nginx
          podSelector:
            matchLabels:
              app.kubernetes.io/name: ingress-nginx
      ports:
        - protocol: TCP
          port: 8000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: oauth-ingress
  annotations:
    cert-manager.io/cluster-issuer: "gts"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
spec:
  tls:
    - hosts:
        - oauth.as207960.net
      secretName: oauth-tls
  rules:
    - host: oauth.as207960.net
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: oauth-django
                port:
                  number: 8000